initSidebarItems({"constant":[["AES_HASH","`AesHash` with a fixed key."],["FIXED_KEY_AES128","Fixed-key AES-128."]],"fn":[["track_unix_channel_pair","Convenience function to create a pair of TrackUnixChannels for local tests in `swanky`."],["unix_channel_pair","Convenience function to create a pair of UnixChannels for local tests in `swanky`."]],"mod":[["bloomfilter","Implementation of a bloom filter."],["channel","Module for encapsulating communication channels for `swanky`."],["cointoss","Implementation of a simple two-party coin tossing protocol using a PRG as a commitment."],["commitment","A trait defining a Commitment Scheme and an implementation in the random oracle model using SHA256."],["utils","Useful utility functions."]],"struct":[["Aes128","AES-128, encryption only."],["Aes256","AES-256, encryption only."],["AesHash","AES-based correlation-robust hash function."],["AesRng","Implementation of a random number generator based on fixed-key AES."],["Block","A 128-bit chunk."],["Block512","A 512-bit value."],["HashChannel","An instantiation of the `AbstractChannel` trait which computes a running hash of all bytes read from and written to the channel."],["TrackChannel","A channel for tracking the number of bits read/written."],["UniversalDigest","Implementation of subtraits of `Digest` trait based on a universal hash function. Does not implement `Digest` itself because it is insecure to construct a universal hash without a key."]],"trait":[["Malicious","A marker trait denoting that the given scheme is maliciously secure."],["SemiHonest","A marker trait denoting that the given scheme is semi-honest secure."]],"type":[["TrackUnixChannel","A TrackChannel which uses UnixStreams."],["UnixChannel","A Channel which uses UnixStreams."]]});